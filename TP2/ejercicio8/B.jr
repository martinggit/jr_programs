//escritores tienen prioridad
import edu.ucdavis.jr.JR;
import java.lang.Math;

public class B {

  private static int [] arreglo = {1, 2, 3, 4, 5, 6};

  //private static int cantidadLectores = 0; // Número de lectores
  //private static int cantidadEscritores = 0; // Número de escritores

  // En todo momento solo uno debe valer 1 --> 0 <= (mutex + lectores + escritores) >= 1
  /*private static sem mutex = 1; // Semáforo que controla entrada y salida a sección crítica
  private static sem lectores = 0; // usado para retardar lectores
  private static sem escritores = 0; // usado para retardar escritores

  private static int lectoresEnEspera = 0; // Número de lectores en espera
  private static int escritoresEnEspera = 0; // Número de escritores en espera
  */

  private static sem Y = 0;
  private static sem X = 0;
  private static sem Z = 1;

  private static sem semlector = 0;
  private static sem semescritor = 0;
  
  public static int cuentaesc = 0;
  public static int cuentalect = 0;

  private static process lectorS((int i = 0 ; i < 10; i++)){
    while (true){
      P(Z);
        P(semlector);
          P(X);
            cuentalect+=1;
            if (cuentalect == 1)
              P(semescritor);
          V(X);
        V(semlector);
      V(Z);

      //LEER DATOS();
      int indice = (int) ((Math.random() * 100) % 6);
      System.out.print("Leyendo Proceso " + i + " indice " + indice + " numero " + arreglo[indice] + " --> "); // Leemos
      mostrarArreglo();

      P(X);
      cuentalect-=1;
      if (cuentalect == 0)
        V(semescritor);
      V(X);
    }
  }

  private static process escritorS((int i = 0; i < 10; i++)){
    while (true){
      P(Y);
        cuentaesc+=1;
        if (cuentaesc == 1)
          P(semlector);
      V(Y);

      P(semescritor);
      //ESCRIBIR DATO();
      int indice = (int) ((Math.random() * 100) % 6);
      System.out.print("Leyendo Proceso " + i + " indice " + indice + " numero " + arreglo[indice] + " --> "); // Leemos
      mostrarArreglo();
      V(semescritor);

      P(Y);
        cuentaesc-=1;
        if (cuentaesc == 0)
          V(semlector);
      V(Y);
    }
  }
 
 
 
  /*private static process lector((int i = 0; i < 10; i++)){
    while (true) {
      P(mutex); // Entramos a la exclusión mutua
      if (cantidadEscritores > 0 || escritoresEnEspera > 0) { // Si hay escritores 
        lectoresEnEspera += 1; // Incrementamos en uno el deseo de leer
        V(mutex); // Hacemos un signal de exclusión mutua
        P(lectores); // Esperamos a que no haya lectores
      }
      
      cantidadLectores += 1; // Si no había escritores escribiendo ni queriendo escribir, ahora hay un lector
      if (lectoresEnEspera > 0) { // Si hay lectores queriendo leer
        lectoresEnEspera -= 1; // Decrementamos en uno los lectores en espera
        V(lectores); // Avisamos a los lectores que pueden leer
      } else {
        V(mutex); // Salimos de la exclusión mutua
      }
      
      int indice = (int) ((Math.random() * 100) % 6);
      System.out.print("Leyendo Proceso " + i + " indice " + indice + " numero " + arreglo[indice] + " --> "); // Leemos
      mostrarArreglo();
      
      P(mutex); // Esperamos para acceder a la variable compartida
      cantidadLectores -= 1; // restamos un lector
      
      if (cantidadLectores == 0 && escritoresEnEspera > 0) { // Si no hay lectores pero hay escritores en espera
        escritoresEnEspera -= 1; // Restamos un escritor en espera
        V(escritores); // Avisamos a los escritores que pueden escribir
      } else { // Si no se cumple que no haya lectores pero si haya escritores
        V(mutex); // Salimos de la exclusión mutua
      }
    }
  }

  private static process escritor((int i = 0; i < 2; i++)) {
    while (true) {
      P(mutex); //P=WAIT
      if (cantidadLectores > 0 || cantidadEscritores > 0) {
        escritoresEnEspera += 1;
        V(mutex);
        P(escritores);
      }
      cantidadEscritores += 1;
      V(mutex); //V=signal
      int indice = (int) ((Math.random() * 100) % 6);
      int numero = (int) (Math.random() * 100);
      arreglo[indice] = numero; // Escribimos
      System.out.print("Escribiendo Proceso " + i + " indice " + indice + " numero " + arreglo[indice] + " --> "); 
      mostrarArreglo();
      P(mutex);
      cantidadEscritores -= 1;
      if (escritoresEnEspera > 0) {
        escritoresEnEspera -= 1;
        V(escritores);
      }
      else if (lectoresEnEspera > 0) {
        lectoresEnEspera -= 1;
        V(lectores); 
      } 
      else {
        V(mutex);
      }
    }
  }
*/

  private static void mostrarArreglo(){
    for (int i : arreglo) {
      System.out.print(i + " ");
    }
    System.out.println();
  }

  public static void main(String [] args) {
    System.out.println("\n"+"----- Lectores/Escritores, escritores con prioridad -----");
  }

}